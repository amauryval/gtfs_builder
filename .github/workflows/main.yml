name: RunTest

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    services:
      postgres:
        image: postgis/postgis:14-master
        env:
          # must specify password for PG Docker container image, see: https://registry.hub.docker.com/_/postgres?tab=description&page=1&name=10
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.7'

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.2.0
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Set up cache
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Create env file
      run: |
        touch .env
        echo AREAS=fake >> .env
        echo ADMIN_DB_URL=postgresql://postgres:postgres@127.0.0.1:5432/test_db >> .env
        cat .env

    - name: Run tests
      shell: bash
      run: |
        source .venv/bin/activate
        python -m pytest --cov=gtfs_builder --cov-report=xml tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}